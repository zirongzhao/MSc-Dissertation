# -*- coding: utf-8 -*-
"""More_tweets_from_same_user.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1abrqeHaanwLr93E8YuUo48CHHmngL3aK
"""

import pandas as pd

pd.set_option('display.max_colwidth', -1)

#Upload the user list from the training set
from google.colab import files
uploaded = files.upload()

user_name_list_train = pd.read_csv('user_id_list_ng.csv',header=None,names=['user_id'],skiprows=1)
user_name_list_train

user_name_list_train = user_name_list_train['user_id'].tolist()
print(len(user_name_list_train))
print(user_name_list_train[:5])

user_name_list_train[3000:3005]

import tweepy
# Consumer keys and access tokens, used for OAuth
# Please use your keys and tokens
consumer_key = ''
consumer_secret = ''
access_token = ''
access_token_secret = ''

# OAuth process, using the keys and tokens
auth = tweepy.OAuthHandler(consumer_key, consumer_secret)
auth.set_access_token(access_token, access_token_secret)

from tqdm.notebook import tqdm

api = tweepy.API(auth)

tweets_for_csv_end = []
for i in tqdm(user_name_list_train[10000:]): 
  try:
    statuses = api.user_timeline(user_id=i, count=7, exclude_replies=True, include_rts=True)
    for tweet in statuses:
      tweets_for_csv_end.append([i, tweet._json["user"]['id_str'], tweet._json["user"]['name'], tweet._json['id_str'], tweet._json['created_at'], tweet._json['text'], tweet._json['user']["location"], tweet._json['user']["description"], tweet._json["lang"]])
  except Exception:
    pass

len(tweets_for_csv_end)

"""1-1000"""

df_1000 = pd.DataFrame(tweets_for_csv_end,columns=['user_id_ref','user_id','user_name','tweet_id','time','tweet_text','user_loc','user_des','lang'])
df_1000.head()

len(df_1000)

df_1000_en = df_1000[df_1000['lang']=='en']

len(df_1000_en)

df_groupby_users = df_1000_en[['tweet_id','user_id']].groupby('user_id').count().sort_values('tweet_id',ascending=False).reset_index()
df_groupby_users

len(df_groupby_users[df_groupby_users['tweet_id']>=5])

df_1000_en.to_csv('df_ng_end_en.csv',index=False)

"""Combine and Export"""

dt_ng = pd.concat([df_5000,df_end])
len(dt_ng)

dt_ng['user_id'].nunique()

dt_ng.to_csv('non_geo_tweets_with_rt.csv',index=False)